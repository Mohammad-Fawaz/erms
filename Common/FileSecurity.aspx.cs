using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

/// <summary>
/// File Security Class
/// </summary>
public partial class Common_FileSecurity : System.Web.UI.Page
{
    public String _SID;
    public String _SessionUser;
    public String _refType;
    public String _refID;    
     
    /// <summary>
    /// Page Load
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void Page_Load(object sender, EventArgs e)
    {       
        this.lblStatus.Text = null;

        try
        {
            _SessionUser = this.Master.UserName;
            _SID = this.Master.SID;
            _refType = Constants.SecurityFileReference; 
           

            if (Request.QueryString["RefID"] != null)
            {
                _refID = Request.QueryString["RefID"];
            }        
            

            if (!IsPostBack)
            {
                InitializeFormFields();
                SetForm(FORM_ON.Edit);
                GetFileSecurity(_refID,_refType);
            }            
        }        
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
    }

    /// <summary>
    /// Clear Form Fields
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        InitializeFormFields();
        SetForm(FORM_ON.Edit);   
        GetFileSecurity(_refID,_refType);
    }

    /// <summary>
    /// Save the Control List
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnEditSave_Click(object sender, EventArgs e)
    {     
        try
        {
            String _FileSecurityValue = null;
            if (this.ddlFileSecurity.SelectedItem.Text != "-NONE-")
            {
                _FileSecurityValue = this.ddlFileSecurity.SelectedValue;
            }
            else
            {
                throw new Exception("The [File Security] could not be located or created. The record will not be saved.");
            }

            DataAccess.ModifyRecords(DataQueries.InsertSecClassRefs(_refID, _refType, _FileSecurityValue));

            InitializeFormFields();
            SetForm(FORM_ON.Edit);
            GetFileSecurity(_refID,_refType);
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }       
    }
       
    /// <summary>
    /// Get File Security
    /// </summary>
    /// <param name="RefID"></param>
    /// <param name="RefType"></param>
    /// <returns></returns>
    private Int32 GetFileSecurity(String RefID, String RefType)
    {
        Int32 _rowCount = 0;
        
        try
        {
            this.gvFileSecurity.CssClass = "GridViewStyleView";
            this.gvFileSecurity.HeaderStyle.CssClass = "GridViewStyleView";
            this.gvFileSecurity.RowStyle.CssClass = "GridViewStyleView";
            this.gvFileSecurity.AutoGenerateDeleteButton = true;  
            this.gvFileSecurity.EnableViewState = false;
            this.gvFileSecurity.Controls.Clear();

            using (DataTable _tempList = DataAccess.GetRecords(DataQueries.GetViewSecClass(RefType,RefID)))
            {
                _rowCount = _tempList.Rows.Count;

                if (_rowCount > 0)
                {
                    this.gvFileSecurity.DataSource = _tempList;
                    this.gvFileSecurity.DataBind();
                }
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
        
        return _rowCount;
    }

    /// <summary>
    /// Data Row Bound
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void gvFileSecurity_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        //Hide ID Column
        Int32 _colDeleteIndex = 0;
        Int32 _colIDIndex = 1;

        if (e.Row.RowType == DataControlRowType.Header)
        {
            e.Row.Cells[_colIDIndex].Visible = false;
        }

        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[_colIDIndex].Visible = false;

            //Get Column Indexes
            DataRowView drvControlList = (DataRowView)e.Row.DataItem;
            Int32 _colCodeIndex = drvControlList.DataView.Table.Columns["Code"].Ordinal + 1;
            Int32 _colDescIndex = drvControlList.DataView.Table.Columns["Security Class"].Ordinal + 1;
            
            //Set Delete Image
            using (LinkButton lbDelete = (LinkButton)e.Row.Cells[_colDeleteIndex].Controls[0])
            {
                lbDelete.Text = "<img height=15 width=15 border=0 src=../App_Themes/delete.gif />";
            }

            //Align      
            e.Row.Cells[_colCodeIndex].HorizontalAlign = HorizontalAlign.Left;
            e.Row.Cells[_colDescIndex].HorizontalAlign = HorizontalAlign.Left;
        }
    }
    
    /// <summary>
    /// File Security Row Delete
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void gvFileSecurity_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {       
        GetFileSecurity(_refID, _refType);

        if (gvFileSecurity.Rows.Count < 1)
        {
            e.Cancel = true;
        }
        else
        {
            Int32 _SecurityRefID = 0;
            if (!String.IsNullOrEmpty(gvFileSecurity.Rows[e.RowIndex].Cells[1].Text))
            {
                _SecurityRefID = Convert.ToInt32(gvFileSecurity.Rows[e.RowIndex].Cells[1].Text);
            }

            Int32 _StatusCheck = DataAccess.ModifyRecords(DataQueries.RemoveSecClassRefsByID(_SecurityRefID));
            if (_StatusCheck > 0)
            {
                this.lblStatus.Text = "Success ! File Security was removed";
            }
        }
        
        GetFileSecurity(_refID, _refType);
    }

    /// <summary>
    /// Initialize Page
    /// </summary>
    private void InitializeFormFields()
    {
        try
        {                         
            DataTable _tempFileSecurityList = new DataTable();
            _tempFileSecurityList.Columns.Add("ID", Type.GetType("System.String"));
            _tempFileSecurityList.Columns.Add("Description", Type.GetType("System.String"));
            _tempFileSecurityList.Rows.Add("-NONE-", "-NONE-");
            _tempFileSecurityList.Merge(DataAccess.GetRecords(DataQueries.GetQSecClass()), true);
            this.ddlFileSecurity.DataSource = _tempFileSecurityList;
            this.ddlFileSecurity.DataTextField = "Description";
            this.ddlFileSecurity.DataValueField = "Code";
            this.ddlFileSecurity.DataBind();
            
            this.gvFileSecurity.EnableViewState = false;
            this.gvFileSecurity.Controls.Clear();
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
    }

    /// <summary>
    /// Set Page to Edit or View
    /// </summary>
    /// <param name="EditView"></param>
    private void SetForm(FORM_ON EditView)
    {
        try
        {
            if (EditView == FORM_ON.Edit)
            {
                //Apply Edit Style                              
                //this.ddlFileSecurity.CssClass = "CtrlMediumValueEdit";
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }       
    }    

}
