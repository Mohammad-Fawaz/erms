using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

/// <summary>
/// Control List Class
/// </summary>
public partial class DocumentManagement_ControlLists : System.Web.UI.Page
{
    public String _SID;
    public String _SessionUser;
    public String _DOCID;    
     
    /// <summary>
    /// Page Load
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void Page_Load(object sender, EventArgs e)
    {       
        this.lblStatus.Text = null;

        try
        {
            _SessionUser = this.Master.UserName;
            _SID = this.Master.SID;

            if (Request.QueryString["DOCID"] != null)
            {
                _DOCID = Request.QueryString["DOCID"];
            }
            
            if (!IsPostBack)
            {
                InitializeFormFields();
                SetForm(FORM_ON.Edit);
                GetControlLists(_DOCID);
            }

            this.hlnkReturnLink.NavigateUrl = "~/DocumentManagement/DocInformation.aspx?SID=" + _SID + "&DOCID=" + _DOCID;
        }        
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
    }

    /// <summary>
    /// Clear Form Fields
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        InitializeFormFields();
        SetForm(FORM_ON.Edit);   
        GetControlLists(_DOCID);
    }

    /// <summary>
    /// Save the Control List
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnEditSave_Click(object sender, EventArgs e)
    {     
        try
        {
            String _ControlList = null;
            if (this.ddlControlList.SelectedItem.Text != "-NONE-")
            {
                _ControlList = this.ddlControlList.SelectedValue;
            }
            else
            {
                throw new Exception("The [Control List] could not be located or created. The record will not be saved.");
            }

            DataAccess.ModifyRecords(DataQueries.InsertControlListRefs(Constants.DocReferenceType, _DOCID, _ControlList));

            InitializeFormFields();
            SetForm(FORM_ON.Edit);
            GetControlLists(_DOCID);
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }       
    }

    /// <summary>
    /// Get Control Lists
    /// </summary>
    /// <param name="DOCID"></param>
    /// <returns></returns>
    private Int32 GetControlLists(String DOCID)
    {
        Int32 _rowCount = 0;
        
        try
        {
            this.gvControlList.AutoGenerateDeleteButton = true;

            this.gvControlList.EnableViewState = false;
            this.gvControlList.Controls.Clear();

            using (DataTable _tempControlList = DataAccess.GetRecords(DataQueries.GetViewControlListByID(Constants.DocReferenceType, DOCID)))
            {
                _rowCount = _tempControlList.Rows.Count;

                if (_rowCount > 0)
                {
                    this.gvControlList.DataSource = _tempControlList;
                    this.gvControlList.DataBind();
                }
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
        
        return _rowCount;
    }

    /// <summary>
    /// Data Row Bound
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void gvControlList_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        //Hide ID Column
        Int32 _colDeleteIndex = 0;
        Int32 _colIDIndex = 1;

        if (e.Row.RowType == DataControlRowType.Header)
        {
            e.Row.Cells[_colIDIndex].Visible = false;
        }

        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[_colIDIndex].Visible = false;

            //Get Column Indexes
            DataRowView drvCLst = (DataRowView)e.Row.DataItem;
            Int32 _colCLIndex = drvCLst.DataView.Table.Columns["Control List"].Ordinal + 1;
            Int32 _colDescIndex = drvCLst.DataView.Table.Columns["Description"].Ordinal + 1;

            //Set Delete Image
            using (LinkButton lbDelete = (LinkButton)e.Row.Cells[_colDeleteIndex].Controls[0])
            {
                lbDelete.Text = "<img height=15 width=15 border=0 src=../App_Themes/delete.gif />";
            }

            //Align      
            e.Row.Cells[_colCLIndex].HorizontalAlign = HorizontalAlign.Left;
            e.Row.Cells[_colDescIndex].HorizontalAlign = HorizontalAlign.Left;
        }
    }
    protected void gvControlLists_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        GetControlLists(_DOCID);

        if (gvControlList.Rows.Count < 1)
        {
            e.Cancel = true;
        }
        else
        {
            String _CList = gvControlList.Rows[e.RowIndex].Cells[1].Text;

            DataAccess.ModifyRecords(DataQueries.DeleteControlListRefs(Constants.DocReferenceType, _DOCID, Convert.ToInt32(_CList)));
            this.lblStatus.Text = "Success ! Control List was removed";
            
        }

        GetControlLists(_DOCID);
    }

    /// <summary>
    /// Initialize Page
    /// </summary>
    private void InitializeFormFields()
    {
        try
        {                         
            DataTable _tempControlList = new DataTable();
            _tempControlList.Columns.Add("ID", Type.GetType("System.String"));
            _tempControlList.Columns.Add("Description", Type.GetType("System.String"));
            _tempControlList.Rows.Add("-NONE-", "-NONE-");
            _tempControlList.Merge(DataAccess.GetRecords(DataQueries.GetQControlList()), true);
            this.ddlControlList.DataSource = _tempControlList;
            this.ddlControlList.DataTextField = "Description";
            this.ddlControlList.DataValueField = "Code";
            this.ddlControlList.DataBind();
            
            this.gvControlList.EnableViewState = false;
            this.gvControlList.Controls.Clear();
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }
    }

    /// <summary>
    /// Set Page to Edit or View
    /// </summary>
    /// <param name="EditView"></param>
    private void SetForm(FORM_ON EditView)
    {
        try
        {
            if (EditView == FORM_ON.Edit)
            {
                //Apply Edit Style                              
                
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage
        }       
    }    

}
