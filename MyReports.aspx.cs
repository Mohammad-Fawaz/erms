using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using OpenQA.Selenium.Remote;
//using static System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel;

public partial class Reports_MyReports : System.Web.UI.Page
{
    public String _SID;
    public String _SessionUser;

    protected void Page_Load(object sender, EventArgs e)
    {
        this.lblStatus.Text = null;
        Int32 ReportID = 0;

        try
        {
            _SessionUser = this.Master.UserName;
            _SID = this.Master.SID;

            // Get Report ID
            String QSReportID = Request.QueryString["ReportID"];
            if (!String.IsNullOrEmpty(QSReportID))
            {
                ReportID = Convert.ToInt32(QSReportID);
            }

            if (!IsPostBack)
            {
                GetMyReports(ReportID);
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage            
        }
    }

    protected void btnNewEditSave_Click(object sender, EventArgs e)
    {
        Response.Redirect("AdvanceSearch.aspx?SID=" + _SID);
    }

    protected void gvReports_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
    {
        String _ReportID = gvReports.Rows[e.NewSelectedIndex].Cells[1].Text;
        Server.Transfer("MyReportsResults.aspx?SID=" + _SID + "&RepID=" + _ReportID);
    }

    protected void gvReports_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        Int32 _colReportIDIndex = 1;

        Int32 ReportID = 0;

        if (gvReports.Rows.Count < 1)
        {
            e.Cancel = true;
        }
        else
        {
            ReportID = Convert.ToInt32(gvReports.Rows[e.RowIndex].Cells[_colReportIDIndex].Text);
            Int32 _StatusCheck = DataAccess.ModifyRecords(DataQueries.DeleteMyReportsByID(ReportID));
            if (_StatusCheck > 0)
            {
                this.lblStatus.Text = "Success ! Report was deleted";
            }
        }

        GetMyReports(0);
    }


    protected void gvReports_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        Int32 _colDeleteIndex = 0;
        Int32 _colReportIDIndex = 1;

        if (e.Row.RowType == DataControlRowType.Header)
        {
            // Report ID
            e.Row.Cells[_colReportIDIndex].Visible = false;
        }

        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[_colReportIDIndex].Visible = false;

            //Get Column Indexes
            DataRowView drvReports = (DataRowView)e.Row.DataItem;

            Int32 _colReportNameIndex = drvReports.DataView.Table.Columns["Report Name"].Ordinal + 1;
            Int32 _colReportDescIndex = drvReports.DataView.Table.Columns["Report Desc"].Ordinal + 1;

            //Delete Button
            using (LinkButton lbDelete = (LinkButton)e.Row.Cells[_colDeleteIndex].Controls[0])
            {
                lbDelete.Text = "<img height=15 width=15 border=0 src=/App_Themes/delete.gif />";
            }

            //Select Button
            using (LinkButton lbSelect = (LinkButton)e.Row.Cells[_colDeleteIndex].Controls[2])
            {
                lbSelect.Text = "<img height=15 width=15 border=0 src=/App_Themes/find.gif />";
            }

            //Align
            e.Row.Cells[_colDeleteIndex].HorizontalAlign = HorizontalAlign.Center;
            e.Row.Cells[_colDeleteIndex].Width = 60;
            e.Row.Cells[_colReportNameIndex].HorizontalAlign = HorizontalAlign.Left;
            e.Row.Cells[_colReportDescIndex].HorizontalAlign = HorizontalAlign.Left;
        }
    }


    private Int32 GetMyReports(Int32 ReportID)
    {
        Int32 _rowCount = 0;
        Int32 _EmpID = 0;

        try
        {
            this.gvReports.CssClass = "dataTable-table";
            this.gvReports.HeaderStyle.CssClass = "GridViewStyleView";
            this.gvReports.RowStyle.CssClass = "GridViewStyleView";
            this.gvReports.AutoGenerateDeleteButton = true;
            this.gvReports.AutoGenerateSelectButton = true;
            this.gvReports.EnableViewState = true;
            this.gvReports.Controls.Clear();

            using (DataTable _tempAdmin = DataAccess.GetRecords(DataQueries.GetEWebSessions(_SID)))
            {
                _rowCount = _tempAdmin.Rows.Count;

                if (_rowCount > 0)
                {
                    if (!String.IsNullOrEmpty(_tempAdmin.Rows[0]["Emp ID"].ToString()))
                    {
                        _EmpID = Convert.ToInt32(_tempAdmin.Rows[0]["Emp ID"].ToString());
                    }
                }
            }

            using (DataTable _tempMyReports = DataAccess.GetRecords(DataQueries.GetMyReports(ReportID, _EmpID, Utils.IsAdmin(_SID))))
            {
                _rowCount = _tempMyReports.Rows.Count;

                if (_rowCount > 0)
                {
                    this.gvReports.DataSource = _tempMyReports;
                    this.gvReports.DataBind();
                }
                else
                {
                    this.lblStatus.Text = "No Report found";
                }
            }
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage            
        }

        return _rowCount;
    }

    protected void gvReports_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        this.lblStatus.Text = null;
        Int32 ReportID = 0;

        try
        {
            _SessionUser = this.Master.UserName;
            _SID = this.Master.SID;

            // Get Report ID
            String QSReportID = Request.QueryString["ReportID"];
            if (!String.IsNullOrEmpty(QSReportID))
            {
                ReportID = Convert.ToInt32(QSReportID);
            }

            GetMyReports(ReportID);
            gvReports.PageIndex = e.NewPageIndex;
            gvReports.DataBind();
        }
        catch (Exception ex)
        {
            lblStatus.Text = ex.Message; //Log the messsage            
        }

    }
}
